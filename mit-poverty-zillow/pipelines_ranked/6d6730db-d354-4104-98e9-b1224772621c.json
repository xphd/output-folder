{
    "id": "6d6730db-d354-4104-98e9-b1224772621c",
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created": "2019-05-08T18:37:16.443190Z",
    "context": "TESTING",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.5.produce",
            "name": "output predictions"
        }
    ],
    "steps": [
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data_transformation.denormalize.Common",
                "name": "Denormalize datasets",
                "digest": "7079ab320038cee885edd13ab7613c42063969b4d5c2af7ab19ed681b2ff28e9"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name": "Extract a DataFrame from a Dataset",
                "digest": "f399b299f15daed778a53bd13b0dbf0841ce53cfbcd71c141947f34d7dc29ac3"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.0.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "version": "0.5.0",
                "python_path": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                "name": "Parses strings into their types",
                "digest": "44390ad614ffd62169cdf7958ddaf291e49c92cc7a967ae965f1c1b628063784"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.1.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                "version": "v2019.2.27",
                "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
                "name": "sklearn.preprocessing.imputation.Imputer",
                "digest": "d2e5ae2cb8532287e5c905b56839c56047445e8911cf7e828a0ecb94cc437b57"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.2.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "use_semantic_types": {
                    "type": "VALUE",
                    "data": true
                },
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                },
                "strategy": {
                    "type": "VALUE",
                    "data": "most_frequent"
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "2a031907-6b2c-3390-b365-921f89c8816a",
                "version": "v2019.2.27",
                "python_path": "d3m.primitives.regression.gradient_boosting.SKlearn",
                "name": "sklearn.ensemble.gradient_boosting.GradientBoostingRegressor",
                "digest": "854e6eb330324e62836f61c353339ab2e271c4849ef2fd0c439268bbf5490743"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                },
                "outputs": {
                    "type": "CONTAINER",
                    "data": "steps.3.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "hyperparams": {
                "use_semantic_types": {
                    "type": "VALUE",
                    "data": true
                },
                "return_result": {
                    "type": "VALUE",
                    "data": "replace"
                },
                "criterion": {
                    "type": "VALUE",
                    "data": "mse"
                },
                "learning_rate": {
                    "type": "VALUE",
                    "data": 0.07872428377435457
                },
                "loss": {
                    "type": "VALUE",
                    "data": "lad"
                },
                "max_depth": {
                    "type": "VALUE",
                    "data": 44
                },
                "min_samples_leaf": {
                    "type": "VALUE",
                    "data": 716
                },
                "min_samples_split": {
                    "type": "VALUE",
                    "data": 782
                },
                "n_estimators": {
                    "type": "VALUE",
                    "data": 532
                }
            }
        },
        {
            "type": "PRIMITIVE",
            "primitive": {
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "version": "0.3.0",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                "name": "Construct pipeline predictions output",
                "digest": "6358eb9962708eeb875c044ca115511cff97717d39914c1cdc7cd9d453c118cd"
            },
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.4.produce"
                },
                "reference": {
                    "type": "CONTAINER",
                    "data": "steps.2.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ]
        }
    ],
    "digest": "ed541f94c3e640bc39c3e5aed7a8699ce4844dd8d564facce19ce719d2446c42",
    "pipeline_rank": 19.999999949999996
}